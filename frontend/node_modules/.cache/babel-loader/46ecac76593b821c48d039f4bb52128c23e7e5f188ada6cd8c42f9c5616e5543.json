{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Surya\\\\OneDrive\\\\Desktop\\\\roxiler-sytems\\\\frontend\\\\src\\\\components\\\\bar-chart\\\\index.js\";\nimport React from \"react\";\nimport \"./index.css\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from \"chart.js\";\nimport { Bar } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nconst options = {\n  responsive: true,\n  plugins: {\n    legend: {\n      position: \"top\"\n    },\n    title: {\n      display: true,\n      text: \"Bar Chart\"\n    }\n  }\n};\nconst BarChart = ({\n  month\n}) => {\n  const {\n    dataSet\n  } = props;\n  const labels = dataSet.map(item => item.topic);\n  const intensityData = dataSet.map(item => item.intensity);\n  const likelihoodData = dataSet.map(item => item.likelihood);\n  const relevanceData = dataSet.map(item => item.relevance);\n  const sectors = Array.from(new Set(dataSet.map(item => item.topic)));\n  const sectorCounts = sectors.map(sector => {\n    const count = dataSet.filter(item => item.sector === sector).length;\n    return count;\n  });\n  const data = {\n    labels: sectors,\n    datasets: [{\n      label: \"Intensity\",\n      data: intensityData,\n      backgroundColor: \"rgba(255, 99, 132, 0.5)\"\n    }, {\n      label: \"likelihood\",\n      data: likelihoodData,\n      backgroundColor: \"rgba(53, 162, 235, 0.5)\"\n    }, {\n      label: \"relevance\",\n      data: relevanceData,\n      backgroundColor: \"rgba(200, 192, 235, 0.5)\"\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bar-chart-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: `Bar Chart Stats - ${month}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-container\",\n      children: /*#__PURE__*/_jsxDEV(Bar, {\n        options: options,\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_c = BarChart;\nexport default BarChart;\nvar _c;\n$RefreshReg$(_c, \"BarChart\");","map":{"version":3,"names":["React","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","Bar","jsxDEV","_jsxDEV","register","options","responsive","plugins","legend","position","title","display","text","BarChart","month","dataSet","props","labels","map","item","topic","intensityData","intensity","likelihoodData","likelihood","relevanceData","relevance","sectors","Array","from","Set","sectorCounts","sector","count","filter","length","data","datasets","label","backgroundColor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Surya/OneDrive/Desktop/roxiler-sytems/frontend/src/components/bar-chart/index.js"],"sourcesContent":["import React from \"react\";\r\n\r\nimport \"./index.css\";\r\n\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from \"chart.js\";\r\n\r\nimport { Bar } from \"react-chartjs-2\";\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nconst options = {\r\n  responsive: true,\r\n  plugins: {\r\n    legend: {\r\n      position: \"top\",\r\n    },\r\n    title: {\r\n      display: true,\r\n      text: \"Bar Chart\",\r\n    },\r\n  },\r\n};\r\n\r\nconst BarChart = ({ month }) => {\r\n  const { dataSet } = props;\r\n\r\n  const labels = dataSet.map((item) => item.topic);\r\n  const intensityData = dataSet.map((item) => item.intensity);\r\n  const likelihoodData = dataSet.map((item) => item.likelihood);\r\n  const relevanceData = dataSet.map((item) => item.relevance);\r\n\r\n  const sectors = Array.from(new Set(dataSet.map((item) => item.topic)));\r\n  const sectorCounts = sectors.map((sector) => {\r\n    const count = dataSet.filter((item) => item.sector === sector).length;\r\n    return count;\r\n  });\r\n\r\n  const data = {\r\n    labels: sectors,\r\n    datasets: [\r\n      {\r\n        label: \"Intensity\",\r\n        data: intensityData,\r\n        backgroundColor: \"rgba(255, 99, 132, 0.5)\",\r\n      },\r\n      {\r\n        label: \"likelihood\",\r\n        data: likelihoodData,\r\n        backgroundColor: \"rgba(53, 162, 235, 0.5)\",\r\n      },\r\n      {\r\n        label: \"relevance\",\r\n        data: relevanceData,\r\n        backgroundColor: \"rgba(200, 192, 235, 0.5)\",\r\n      },\r\n    ],\r\n  };\r\n  return (\r\n    <div className=\"bar-chart-container\">\r\n      <h1>{`Bar Chart Stats - ${month}`}</h1>\r\n      <div className=\"chart-container\">\r\n        <Bar options={options} data={data} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BarChart;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}