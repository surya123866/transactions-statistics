{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Surya\\\\OneDrive\\\\Desktop\\\\roxiler-sytems\\\\frontend\\\\src\\\\components\\\\transactionsTable\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./index.css\"; // Make sure to create a CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TransactionsTable = () => {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const [selectedMonth, setSelectedMonth] = useState(\"March\");\n  const [currentPage, setCurrentPage] = useState(1);\n\n  // Fetch data from the API\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(`http://localhost:3000/transactions?page=${currentPage}?month=${selectedMonth}`);\n        const data = await response.json();\n        setTransactions(data.transactions);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    fetchData();\n  }, [currentPage, selectedMonth]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"transactions-table-container\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 11\n  }, this);\n};\n_s(TransactionsTable, \"Zexhg+j0u5oULec5Nq5i3uiVoeQ=\");\n_c = TransactionsTable;\nexport default TransactionsTable;\nvar _c;\n$RefreshReg$(_c, \"TransactionsTable\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TransactionsTable","_s","transactions","setTransactions","selectedMonth","setSelectedMonth","currentPage","setCurrentPage","fetchData","response","fetch","data","json","error","console","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Surya/OneDrive/Desktop/roxiler-sytems/frontend/src/components/transactionsTable/index.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./index.css\"; // Make sure to create a CSS file for styling\r\n\r\nconst TransactionsTable = () => {\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [selectedMonth, setSelectedMonth] = useState(\"March\");\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  // Fetch data from the API\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          `http://localhost:3000/transactions?page=${currentPage}?month=${selectedMonth}`\r\n        );\r\n        const data = await response.json();\r\n        setTransactions(data.transactions);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [currentPage, selectedMonth]);\r\n\r\n  return (<div className=\"transactions-table-container\"></div>\r\n   \r\n  );\r\n};\r\n\r\nexport default TransactionsTable;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,aAAa,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACQ,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,OAAO,CAAC;EAC3D,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;;EAEjD;EACAC,SAAS,CAAC,MAAM;IACd,MAAMW,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACzB,2CAA0CJ,WAAY,UAASF,aAAc,EAChF,CAAC;QACD,MAAMO,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCT,eAAe,CAACQ,IAAI,CAACT,YAAY,CAAC;MACpC,CAAC,CAAC,OAAOW,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IAEDL,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACF,WAAW,EAAEF,aAAa,CAAC,CAAC;EAEhC,oBAAQL,OAAA;IAAKgB,SAAS,EAAC;EAA8B;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAG9D,CAAC;AAAClB,EAAA,CAzBID,iBAAiB;AAAAoB,EAAA,GAAjBpB,iBAAiB;AA2BvB,eAAeA,iBAAiB;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}