{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Surya\\\\OneDrive\\\\Desktop\\\\roxiler-sytems\\\\frontend\\\\src\\\\components\\\\bar-chart\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Bar } from \"react-chartjs-2\";\nimport \"./index.css\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from \"chart.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nconst options = {\n  responsive: true,\n  plugins: {\n    legend: {\n      position: \"top\"\n    },\n    title: {\n      display: true,\n      text: \"Bar Chart\"\n    }\n  }\n};\nconst BarChart = () => {\n  _s();\n  const [chartData, setChartData] = useState(null);\n  const month = \"2021-05\";\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(`http://localhost:3000/bar-chart?month=${month}`);\n        const chartDataResponse = response.data;\n\n        // Split values into labels and data\n        const labels = Object.keys(chartDataResponse);\n        const data = Object.values(chartDataResponse);\n        setChartData({\n          labels: labels,\n          datasets: [{\n            label: \"Price Ranges\",\n            data: data,\n            backgroundColor: \"rgba(75,192,192,0.2)\",\n            borderColor: \"rgba(75,192,192,1)\",\n            borderWidth: 5\n          }]\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchData();\n  }, [month]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bar-chart-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: `Bar Chart Stats - ${month}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-container\",\n      children: chartData ? /*#__PURE__*/_jsxDEV(Bar, {\n        options: options,\n        data: chartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(BarChart, \"9euvDhZ+n6eLTlbzwvHmNPhoqAw=\");\n_c = BarChart;\nexport default BarChart;\nvar _c;\n$RefreshReg$(_c, \"BarChart\");","map":{"version":3,"names":["React","useEffect","useState","axios","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","options","responsive","plugins","legend","position","title","display","text","BarChart","_s","chartData","setChartData","month","fetchData","response","get","chartDataResponse","data","labels","Object","keys","values","datasets","label","backgroundColor","borderColor","borderWidth","error","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Surya/OneDrive/Desktop/roxiler-sytems/frontend/src/components/bar-chart/index.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Bar } from \"react-chartjs-2\";\r\n\r\nimport \"./index.css\";\r\n\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from \"chart.js\";\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nconst options = {\r\n  responsive: true,\r\n  plugins: {\r\n    legend: {\r\n      position: \"top\",\r\n    },\r\n    title: {\r\n      display: true,\r\n      text: \"Bar Chart\",\r\n    },\r\n  },\r\n};\r\n\r\nconst BarChart = () => {\r\n  const [chartData, setChartData] = useState(null);\r\n  const month = \"2021-05\";\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `http://localhost:3000/bar-chart?month=${month}`\r\n        );\r\n        const chartDataResponse = response.data;\r\n\r\n        // Split values into labels and data\r\n        const labels = Object.keys(chartDataResponse);\r\n        const data = Object.values(chartDataResponse);\r\n\r\n        setChartData({\r\n          labels: labels,\r\n          datasets: [\r\n            {\r\n              label: \"Price Ranges\",\r\n              data: data,\r\n              backgroundColor: \"rgba(75,192,192,0.2)\",\r\n              borderColor: \"rgba(75,192,192,1)\",\r\n              borderWidth: 5,\r\n            },\r\n          ],\r\n        });\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [month]);\r\n\r\n  return (\r\n    <div className=\"bar-chart-container\">\r\n      <h1>{`Bar Chart Stats - ${month}`}</h1>\r\n      <div className=\"chart-container\">\r\n        {chartData ? (\r\n          <Bar options={options} data={chartData} />\r\n        ) : (\r\n          <p>Loading...</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BarChart;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,QAAQ,iBAAiB;AAErC,OAAO,aAAa;AAEpB,SACEC,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,UAAU,EACVC,KAAK,EACLC,OAAO,EACPC,MAAM,QACD,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElBR,OAAO,CAACS,QAAQ,CACdR,aAAa,EACbC,WAAW,EACXC,UAAU,EACVC,KAAK,EACLC,OAAO,EACPC,MACF,CAAC;AAED,MAAMI,OAAO,GAAG;EACdC,UAAU,EAAE,IAAI;EAChBC,OAAO,EAAE;IACPC,MAAM,EAAE;MACNC,QAAQ,EAAE;IACZ,CAAC;IACDC,KAAK,EAAE;MACLC,OAAO,EAAE,IAAI;MACbC,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAED,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGzB,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM0B,KAAK,GAAG,SAAS;EAEvB3B,SAAS,CAAC,MAAM;IACd,MAAM4B,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAM3B,KAAK,CAAC4B,GAAG,CAC7B,yCAAwCH,KAAM,EACjD,CAAC;QACD,MAAMI,iBAAiB,GAAGF,QAAQ,CAACG,IAAI;;QAEvC;QACA,MAAMC,MAAM,GAAGC,MAAM,CAACC,IAAI,CAACJ,iBAAiB,CAAC;QAC7C,MAAMC,IAAI,GAAGE,MAAM,CAACE,MAAM,CAACL,iBAAiB,CAAC;QAE7CL,YAAY,CAAC;UACXO,MAAM,EAAEA,MAAM;UACdI,QAAQ,EAAE,CACR;YACEC,KAAK,EAAE,cAAc;YACrBN,IAAI,EAAEA,IAAI;YACVO,eAAe,EAAE,sBAAsB;YACvCC,WAAW,EAAE,oBAAoB;YACjCC,WAAW,EAAE;UACf,CAAC;QAEL,CAAC,CAAC;MACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACpB;IACF,CAAC;IAEDd,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACD,KAAK,CAAC,CAAC;EAEX,oBACEd,OAAA;IAAKgC,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAClCjC,OAAA;MAAAiC,QAAA,EAAM,qBAAoBnB,KAAM;IAAC;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACvCrC,OAAA;MAAKgC,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAC7BrB,SAAS,gBACRZ,OAAA,CAACV,GAAG;QAACY,OAAO,EAAEA,OAAQ;QAACiB,IAAI,EAAEP;MAAU;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAE1CrC,OAAA;QAAAiC,QAAA,EAAG;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IACjB;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC1B,EAAA,CAhDID,QAAQ;AAAA4B,EAAA,GAAR5B,QAAQ;AAkDd,eAAeA,QAAQ;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}