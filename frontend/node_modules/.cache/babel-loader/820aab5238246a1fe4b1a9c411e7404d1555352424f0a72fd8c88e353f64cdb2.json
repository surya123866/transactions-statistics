{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Surya\\\\OneDrive\\\\Desktop\\\\roxiler-sytems\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport TransactionsTable from \"./components/transactionsTable\";\nimport \"/./\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const initializeDatabase = async () => {\n      try {\n        // Simulate a delay for demonstration purposes (remove in production)\n        await new Promise(resolve => setTimeout(resolve, 1000));\n\n        // Replace the URL with the actual endpoint for initializing the database\n        await fetch(\"http://localhost:3000/initialize-database\");\n\n        // Set loading to false once initialization is complete\n        setLoading(false);\n      } catch (error) {\n        console.error(\"Error initializing database:\", error);\n        // Handle error scenarios if needed\n      }\n    };\n\n    initializeDatabase();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 18\n    }, this) : /*#__PURE__*/_jsxDEV(TransactionsTable, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 38\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"J7PPXooW06IQ11rfabbvgk72KFw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","TransactionsTable","jsxDEV","_jsxDEV","App","_s","loading","setLoading","initializeDatabase","Promise","resolve","setTimeout","fetch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Surya/OneDrive/Desktop/roxiler-sytems/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport TransactionsTable from \"./components/transactionsTable\";\nimport \"/./\"\nconst App = () => {\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const initializeDatabase = async () => {\n      try {\n        // Simulate a delay for demonstration purposes (remove in production)\n        await new Promise((resolve) => setTimeout(resolve, 1000));\n\n        // Replace the URL with the actual endpoint for initializing the database\n        await fetch(\"http://localhost:3000/initialize-database\");\n\n        // Set loading to false once initialization is complete\n        setLoading(false);\n      } catch (error) {\n        console.error(\"Error initializing database:\", error);\n        // Handle error scenarios if needed\n      }\n    };\n\n    initializeDatabase();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      {loading ? <p>Loading...</p> : <TransactionsTable />}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,iBAAiB,MAAM,gCAAgC;AAC9D,OAAO,KAAK;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACZ,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMS,kBAAkB,GAAG,MAAAA,CAAA,KAAY;MACrC,IAAI;QACF;QACA,MAAM,IAAIC,OAAO,CAAEC,OAAO,IAAKC,UAAU,CAACD,OAAO,EAAE,IAAI,CAAC,CAAC;;QAEzD;QACA,MAAME,KAAK,CAAC,2CAA2C,CAAC;;QAExD;QACAL,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC,OAAOM,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;QACpD;MACF;IACF,CAAC;;IAEDL,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAKY,SAAS,EAAC,KAAK;IAAAC,QAAA,EACjBV,OAAO,gBAAGH,OAAA;MAAAa,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAAGjB,OAAA,CAACF,iBAAiB;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjD,CAAC;AAEV,CAAC;AAACf,EAAA,CA5BID,GAAG;AAAAiB,EAAA,GAAHjB,GAAG;AA8BT,eAAeA,GAAG;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}